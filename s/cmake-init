#!/bin/sh

WITHOUT_LUA=OFF
ERESSEA_DB=memory
pkg-config --exists sqlite3 && ERESSEA_DB=sqlite

usage()
{
    echo "usage: $0 --help --db=DB"
}
options=$(getopt -a -l help,no-lua,db: 'hd:' "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
eval set -- "$options"

while true; do
    case "$1" in
        --no-lua)
            WITHOUT_LUA=ON ;;
        --help | -h)
            usage
            ;;
        --db | -d)
            ERESSEA_DB="$2"
            shift
            ;;
        --)
            break
            ;;
    esac
    shift
done

git submodule update --init
ROOT=$(git rev-parse --show-toplevel)
[ -z $BUILD ] && BUILD=Debug
[ -z "$CC" ] && [ ! -z `which clang` ] && CC="clang"
[ -z "$CC" ] && [ ! -z `which gcc` ] && CC="gcc"
[ -z "$CC" ] && [ ! -z `which tcc` ] && CC="tcc"
[ -z "$CC" ] && [ ! -z `which cc` ] && CC="cc"

[ -z $MACHINE ] && MACHINE=`uname -m`
BIN_DIR="$ROOT/build"
rm -rf $BIN_DIR
mkdir -p $BIN_DIR

# use anything installed in /opt or /usr
LIBRARY_PATH=/opt/lib:/opt/lib/$MACHINE:/usr/lib/$MACHINE
INCLUDE_PATH=/opt/include:/usr/include
PREFIX_PATH=/opt

# I like to put stuff in ~/usr if I don't have permission to install packages on the machine:
if [ -d $HOME/usr ]; then
  LIBRARY_PATH=$HOME/usr/lib:$HOME/usr/lib/$MACHINE:$LIBRARY_PATH
  INCLUDE_PATH=$HOME/usr/include:$HOME/usr/include/$MACHINE:$INCLUDE_PATH
  PREFIX_PATH=$HOME/usr:$HOME/usr/local:$PREFIX_PATH
fi

DEST=$(dirname $ROOT)/server

cat >| build/config.cmake <<HEREDOC
SET (ERESSEA_DB "$ERESSEA_DB" CACHE STRING "Database driver")
SET (CMAKE_BUILD_TYPE "$BUILD" CACHE STRING "")
SET (CMAKE_LIBRARY_PATH "$LIBRARY_PATH" CACHE PATH "")
SET (CMAKE_PREFIX_PATH "$PREFIX_PATH" CACHE PATH "")
SET (WITHOUT_LUA $WITHOUT_LUA CACHE BOOL "")
HEREDOC

set -e

cd $BIN_DIR
cmake -C config.cmake ..
cd $OLDPWD

